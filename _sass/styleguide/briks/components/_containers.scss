

/*
    CONTAINERS
    Briks containers component
    ---
    CSS declarations for container component
*/
@if $briks-components__containers__enabled 
and $briks-components-prefix != '' 
and $briks-components-prefix != false 
and $briks-components__containers__name != '' 
and $briks-components__containers__name != false
and length($briks-components__containers__css) > 0 {
    .#{$briks-components-prefix}#{$briks-components__containers__name} {
        @each $property, $value in $briks-components__containers__css {
            @if type-of($value) == 'string' {
                $value: unquote($value);
            }
            #{$property}: $value;
        }
        // Modifiers
        @each $name, $cssdata in $briks-components__containers__css-modifiers {
            &.#{$briks-modifiers-prefix}#{$name} {
                @each $property, $value in $cssdata {
                    @if type-of($value) == 'string' {
                        $value: unquote($value);
                    }
                    #{$property}: $value;
                }
            }
        }
        // Responsive
        @if $briks-components__containers__responsive {
            @each $screen, $value in $briks-screen-sizes {
                @include my-screen-size($screen) {
                    // Responsive modifiers
                    @each $name, $cssdata in $briks-components__containers__css-modifiers {
                        &.#{$briks-modifiers-prefix}#{$name}#{$briks-responsive-prefix}#{$screen},
                        &[#{$briks-modifiers-prefix}#{$name}*="#{$screen}"] {
                            @each $property, $value in $cssdata {
                                @if type-of($value) == 'string' {
                                    $value: unquote($value);
                                }
                                #{$property}: $value;
                            }
                        }
                    }
                }
            }
        }
    }
}
